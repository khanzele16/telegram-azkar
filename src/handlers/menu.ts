import { Menu } from "@grammyjs/menu";
import { MyContext } from "../types";
import { location, stats, profile, admin } from "./commands";
import User from "../database/models/User";

export const menuButtons = new Menu<MyContext>("menu")
  .text("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", async (ctx) => {
    await ctx.answerCallbackQuery("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å");
    ctx.menu.close();
    await profile(ctx);
  })
  .row()
  .text("üìç –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è", async (ctx) => {
    await ctx.answerCallbackQuery("üìç –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è");
    ctx.menu.close();
    await location(ctx);
  })
  .text("üóì –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", async (ctx) => {
    await ctx.answerCallbackQuery("üóì  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞");
    ctx.menu.close();
    await stats(ctx);
  })
  .row()
  .text("‚ùì –ü–æ–º–æ—â—å", async (ctx) => {
    await ctx.answerCallbackQuery("‚ùì –ü–æ–º–æ—â—å");
    ctx.menu.close();
    await ctx.reply(
      "<b>‚ùì –ü–æ–º–æ—â—å</b>\n\n–ú—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–∑–∫–∞—Ä—ã –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ ‚Äî @khanzele",
      { parse_mode: "HTML" }
    );
  });

export const adminMenuButtons = new Menu<MyContext>("admin-menu")
  .text("üë§ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", async (ctx) => {
    await ctx.answerCallbackQuery("üë§ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞");
    ctx.menu.close();
    const users = await User.countDocuments({});
    const notifyUsers = await User.countDocuments({
      blocked: false,
      "timings.FajrUTC": { $exists: true, $ne: null },
      "timings.AsrUTC": { $exists: true, $ne: null },
    });
    const blockedUsers = await User.countDocuments({ blocked: true });
    await ctx.reply(
      `<b>üë§ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n\nüë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users}\nüîî –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏—Ö–æ–¥—è—Ç –∞–∑–∫–∞—Ä—ã: ${notifyUsers}\nüö´ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç: ${blockedUsers}`,
      { parse_mode: "HTML" }
    );
  })
  .row()
  .text("üì• –†–∞—Å—Å—ã–ª–∫–∞", async (ctx) => {
    await ctx.answerCallbackQuery("üì• –†–∞—Å—Å—ã–ª–∫–∞");
    ctx.menu.close();
    await ctx.conversation.enter('broadcastConversation');
  });
